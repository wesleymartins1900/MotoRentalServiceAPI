// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotoRentalService.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MotoRentalService.Infrastructure.Migrations
{
    [DbContext(typeof(MotoRentalDbContext))]
    partial class MotoRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MotoRentalService.Domain.Entities.DeliveryPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CnhImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DeliveryPeople");
                });

            modelBuilder.Entity("MotoRentalService.Domain.Entities.Moto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("MotoRentalService.Domain.Entities.Rental", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeliveryPersonId")
                        .HasColumnType("uuid");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("MotoId")
                        .HasColumnType("uuid");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("PlanType");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("MotoRentalService.Domain.Entities.DeliveryPerson", b =>
                {
                    b.OwnsOne("MotoRentalService.Domain.ValueObjects.Cnh", "Cnh", b1 =>
                        {
                            b1.Property<Guid>("DeliveryPersonId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CnhNumber");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("CnhType");

                            b1.HasKey("DeliveryPersonId");

                            b1.ToTable("DeliveryPeople");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryPersonId");
                        });

                    b.OwnsOne("MotoRentalService.Domain.ValueObjects.Cnpj", "Cnpj", b1 =>
                        {
                            b1.Property<Guid>("DeliveryPersonId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Cnpj");

                            b1.HasKey("DeliveryPersonId");

                            b1.ToTable("DeliveryPeople");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryPersonId");
                        });

                    b.Navigation("Cnh")
                        .IsRequired();

                    b.Navigation("Cnpj")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
